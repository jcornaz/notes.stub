apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'jacoco'

project.group = 'com.toolable'
project.version = '1.0-develop'

sourceCompatibility = 1.6

javadoc.title = "Notes Stub " + project.version

buildscript {
    ext.kotlin_version = '1.0.2'

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Notes Stub', 'Implementation-Version': project.version
    }
}

repositories {
    mavenCentral()
}

dependencies {

    // IBM Copyrighted dependence
    compile files('libs/Notes.jar')

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile 'com.google.guava:guava:18.0'
    compile 'joda-time:joda-time:2.9.+'

    testCompile 'junit:junit:4.+'
    testCompile 'org.mockito:mockito-all:1.10.+'
}

test {
    testLogging.showStandardStreams = true

    beforeTest { descriptor ->
        logger.lifecycle("Running test: $descriptor")
    }

    onOutput { descriptor, event ->
        logger.lifecycle("Test: $descriptor produced : $event.message")
    }
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }

    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['**/exception/**'])
        })
    }
}

// Tasks to run at each check
check.dependsOn jacocoTestReport
check.dependsOn javadoc
